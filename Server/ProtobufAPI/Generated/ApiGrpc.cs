// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Zayats.GameServer {
  public static partial class GameAPI
  {
    static readonly string __ServiceName = "zayats.GameAPI";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.ReconnectRequest> __Marshaller_zayats_ReconnectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.ReconnectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.ReconnectResponse> __Marshaller_zayats_ReconnectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.ReconnectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.StateSyncRequest> __Marshaller_zayats_StateSyncRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.StateSyncRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.StateSyncResponse> __Marshaller_zayats_StateSyncResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.StateSyncResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.UseItemRequest> __Marshaller_zayats_UseItemRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.UseItemRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.ErrorCodeResponse> __Marshaller_zayats_ErrorCodeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.ErrorCodeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.SubmitTurnRequest> __Marshaller_zayats_SubmitTurnRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.SubmitTurnRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.GameSubscribeToMessagesRequest> __Marshaller_zayats_GameSubscribeToMessagesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.GameSubscribeToMessagesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.GameStreamedMessage> __Marshaller_zayats_GameStreamedMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.GameStreamedMessage.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zayats.GameServer.ReconnectRequest, global::Zayats.GameServer.ReconnectResponse> __Method_Reconnect = new grpc::Method<global::Zayats.GameServer.ReconnectRequest, global::Zayats.GameServer.ReconnectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Reconnect",
        __Marshaller_zayats_ReconnectRequest,
        __Marshaller_zayats_ReconnectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zayats.GameServer.StateSyncRequest, global::Zayats.GameServer.StateSyncResponse> __Method_SyncState = new grpc::Method<global::Zayats.GameServer.StateSyncRequest, global::Zayats.GameServer.StateSyncResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SyncState",
        __Marshaller_zayats_StateSyncRequest,
        __Marshaller_zayats_StateSyncResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zayats.GameServer.UseItemRequest, global::Zayats.GameServer.ErrorCodeResponse> __Method_UseItem = new grpc::Method<global::Zayats.GameServer.UseItemRequest, global::Zayats.GameServer.ErrorCodeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UseItem",
        __Marshaller_zayats_UseItemRequest,
        __Marshaller_zayats_ErrorCodeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zayats.GameServer.SubmitTurnRequest, global::Zayats.GameServer.ErrorCodeResponse> __Method_SubmitTurn = new grpc::Method<global::Zayats.GameServer.SubmitTurnRequest, global::Zayats.GameServer.ErrorCodeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SubmitTurn",
        __Marshaller_zayats_SubmitTurnRequest,
        __Marshaller_zayats_ErrorCodeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zayats.GameServer.GameSubscribeToMessagesRequest, global::Zayats.GameServer.GameStreamedMessage> __Method_SubscribeToMessages = new grpc::Method<global::Zayats.GameServer.GameSubscribeToMessagesRequest, global::Zayats.GameServer.GameStreamedMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeToMessages",
        __Marshaller_zayats_GameSubscribeToMessagesRequest,
        __Marshaller_zayats_GameStreamedMessage);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Zayats.GameServer.ApiReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GameAPI</summary>
    [grpc::BindServiceMethod(typeof(GameAPI), "BindService")]
    public abstract partial class GameAPIBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zayats.GameServer.ReconnectResponse> Reconnect(global::Zayats.GameServer.ReconnectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zayats.GameServer.StateSyncResponse> SyncState(global::Zayats.GameServer.StateSyncRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zayats.GameServer.ErrorCodeResponse> UseItem(global::Zayats.GameServer.UseItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zayats.GameServer.ErrorCodeResponse> SubmitTurn(global::Zayats.GameServer.SubmitTurnRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeToMessages(global::Zayats.GameServer.GameSubscribeToMessagesRequest request, grpc::IServerStreamWriter<global::Zayats.GameServer.GameStreamedMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GameAPI</summary>
    public partial class GameAPIClient : grpc::ClientBase<GameAPIClient>
    {
      /// <summary>Creates a new client for GameAPI</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GameAPIClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GameAPI that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GameAPIClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GameAPIClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GameAPIClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.ReconnectResponse Reconnect(global::Zayats.GameServer.ReconnectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Reconnect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.ReconnectResponse Reconnect(global::Zayats.GameServer.ReconnectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Reconnect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.ReconnectResponse> ReconnectAsync(global::Zayats.GameServer.ReconnectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReconnectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.ReconnectResponse> ReconnectAsync(global::Zayats.GameServer.ReconnectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Reconnect, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.StateSyncResponse SyncState(global::Zayats.GameServer.StateSyncRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SyncState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.StateSyncResponse SyncState(global::Zayats.GameServer.StateSyncRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SyncState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.StateSyncResponse> SyncStateAsync(global::Zayats.GameServer.StateSyncRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SyncStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.StateSyncResponse> SyncStateAsync(global::Zayats.GameServer.StateSyncRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SyncState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.ErrorCodeResponse UseItem(global::Zayats.GameServer.UseItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UseItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.ErrorCodeResponse UseItem(global::Zayats.GameServer.UseItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UseItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.ErrorCodeResponse> UseItemAsync(global::Zayats.GameServer.UseItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UseItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.ErrorCodeResponse> UseItemAsync(global::Zayats.GameServer.UseItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UseItem, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.ErrorCodeResponse SubmitTurn(global::Zayats.GameServer.SubmitTurnRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubmitTurn(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.ErrorCodeResponse SubmitTurn(global::Zayats.GameServer.SubmitTurnRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SubmitTurn, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.ErrorCodeResponse> SubmitTurnAsync(global::Zayats.GameServer.SubmitTurnRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubmitTurnAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.ErrorCodeResponse> SubmitTurnAsync(global::Zayats.GameServer.SubmitTurnRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SubmitTurn, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Zayats.GameServer.GameStreamedMessage> SubscribeToMessages(global::Zayats.GameServer.GameSubscribeToMessagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeToMessages(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Zayats.GameServer.GameStreamedMessage> SubscribeToMessages(global::Zayats.GameServer.GameSubscribeToMessagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeToMessages, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override GameAPIClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GameAPIClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(GameAPIBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Reconnect, serviceImpl.Reconnect)
          .AddMethod(__Method_SyncState, serviceImpl.SyncState)
          .AddMethod(__Method_UseItem, serviceImpl.UseItem)
          .AddMethod(__Method_SubmitTurn, serviceImpl.SubmitTurn)
          .AddMethod(__Method_SubscribeToMessages, serviceImpl.SubscribeToMessages).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GameAPIBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Reconnect, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zayats.GameServer.ReconnectRequest, global::Zayats.GameServer.ReconnectResponse>(serviceImpl.Reconnect));
      serviceBinder.AddMethod(__Method_SyncState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zayats.GameServer.StateSyncRequest, global::Zayats.GameServer.StateSyncResponse>(serviceImpl.SyncState));
      serviceBinder.AddMethod(__Method_UseItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zayats.GameServer.UseItemRequest, global::Zayats.GameServer.ErrorCodeResponse>(serviceImpl.UseItem));
      serviceBinder.AddMethod(__Method_SubmitTurn, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zayats.GameServer.SubmitTurnRequest, global::Zayats.GameServer.ErrorCodeResponse>(serviceImpl.SubmitTurn));
      serviceBinder.AddMethod(__Method_SubscribeToMessages, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Zayats.GameServer.GameSubscribeToMessagesRequest, global::Zayats.GameServer.GameStreamedMessage>(serviceImpl.SubscribeToMessages));
    }

  }
  public static partial class LobbyAPI
  {
    static readonly string __ServiceName = "zayats.LobbyAPI";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.GetRoomsRequest> __Marshaller_zayats_GetRoomsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.GetRoomsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.GetRoomsResponse> __Marshaller_zayats_GetRoomsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.GetRoomsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.RoomInfoRequest> __Marshaller_zayats_RoomInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.RoomInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.RoomInfoResponse> __Marshaller_zayats_RoomInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.RoomInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.ConnectToRoomRequest> __Marshaller_zayats_ConnectToRoomRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.ConnectToRoomRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.ConnectToRoomResponse> __Marshaller_zayats_ConnectToRoomResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.ConnectToRoomResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.StartGameRequest> __Marshaller_zayats_StartGameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.StartGameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zayats.GameServer.StartGameResponse> __Marshaller_zayats_StartGameResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zayats.GameServer.StartGameResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zayats.GameServer.GetRoomsRequest, global::Zayats.GameServer.GetRoomsResponse> __Method_GetRooms = new grpc::Method<global::Zayats.GameServer.GetRoomsRequest, global::Zayats.GameServer.GetRoomsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRooms",
        __Marshaller_zayats_GetRoomsRequest,
        __Marshaller_zayats_GetRoomsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zayats.GameServer.RoomInfoRequest, global::Zayats.GameServer.RoomInfoResponse> __Method_GetRoomInfo = new grpc::Method<global::Zayats.GameServer.RoomInfoRequest, global::Zayats.GameServer.RoomInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRoomInfo",
        __Marshaller_zayats_RoomInfoRequest,
        __Marshaller_zayats_RoomInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zayats.GameServer.ConnectToRoomRequest, global::Zayats.GameServer.ConnectToRoomResponse> __Method_ConnectToRoom = new grpc::Method<global::Zayats.GameServer.ConnectToRoomRequest, global::Zayats.GameServer.ConnectToRoomResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConnectToRoom",
        __Marshaller_zayats_ConnectToRoomRequest,
        __Marshaller_zayats_ConnectToRoomResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zayats.GameServer.StartGameRequest, global::Zayats.GameServer.StartGameResponse> __Method_StartGame = new grpc::Method<global::Zayats.GameServer.StartGameRequest, global::Zayats.GameServer.StartGameResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartGame",
        __Marshaller_zayats_StartGameRequest,
        __Marshaller_zayats_StartGameResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Zayats.GameServer.ApiReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of LobbyAPI</summary>
    [grpc::BindServiceMethod(typeof(LobbyAPI), "BindService")]
    public abstract partial class LobbyAPIBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zayats.GameServer.GetRoomsResponse> GetRooms(global::Zayats.GameServer.GetRoomsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zayats.GameServer.RoomInfoResponse> GetRoomInfo(global::Zayats.GameServer.RoomInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zayats.GameServer.ConnectToRoomResponse> ConnectToRoom(global::Zayats.GameServer.ConnectToRoomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zayats.GameServer.StartGameResponse> StartGame(global::Zayats.GameServer.StartGameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for LobbyAPI</summary>
    public partial class LobbyAPIClient : grpc::ClientBase<LobbyAPIClient>
    {
      /// <summary>Creates a new client for LobbyAPI</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LobbyAPIClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for LobbyAPI that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LobbyAPIClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LobbyAPIClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LobbyAPIClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.GetRoomsResponse GetRooms(global::Zayats.GameServer.GetRoomsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRooms(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.GetRoomsResponse GetRooms(global::Zayats.GameServer.GetRoomsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRooms, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.GetRoomsResponse> GetRoomsAsync(global::Zayats.GameServer.GetRoomsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoomsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.GetRoomsResponse> GetRoomsAsync(global::Zayats.GameServer.GetRoomsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRooms, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.RoomInfoResponse GetRoomInfo(global::Zayats.GameServer.RoomInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoomInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.RoomInfoResponse GetRoomInfo(global::Zayats.GameServer.RoomInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRoomInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.RoomInfoResponse> GetRoomInfoAsync(global::Zayats.GameServer.RoomInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoomInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.RoomInfoResponse> GetRoomInfoAsync(global::Zayats.GameServer.RoomInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRoomInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.ConnectToRoomResponse ConnectToRoom(global::Zayats.GameServer.ConnectToRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConnectToRoom(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.ConnectToRoomResponse ConnectToRoom(global::Zayats.GameServer.ConnectToRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConnectToRoom, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.ConnectToRoomResponse> ConnectToRoomAsync(global::Zayats.GameServer.ConnectToRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConnectToRoomAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.ConnectToRoomResponse> ConnectToRoomAsync(global::Zayats.GameServer.ConnectToRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConnectToRoom, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.StartGameResponse StartGame(global::Zayats.GameServer.StartGameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartGame(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zayats.GameServer.StartGameResponse StartGame(global::Zayats.GameServer.StartGameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartGame, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.StartGameResponse> StartGameAsync(global::Zayats.GameServer.StartGameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartGameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zayats.GameServer.StartGameResponse> StartGameAsync(global::Zayats.GameServer.StartGameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartGame, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override LobbyAPIClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new LobbyAPIClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(LobbyAPIBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetRooms, serviceImpl.GetRooms)
          .AddMethod(__Method_GetRoomInfo, serviceImpl.GetRoomInfo)
          .AddMethod(__Method_ConnectToRoom, serviceImpl.ConnectToRoom)
          .AddMethod(__Method_StartGame, serviceImpl.StartGame).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LobbyAPIBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetRooms, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zayats.GameServer.GetRoomsRequest, global::Zayats.GameServer.GetRoomsResponse>(serviceImpl.GetRooms));
      serviceBinder.AddMethod(__Method_GetRoomInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zayats.GameServer.RoomInfoRequest, global::Zayats.GameServer.RoomInfoResponse>(serviceImpl.GetRoomInfo));
      serviceBinder.AddMethod(__Method_ConnectToRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zayats.GameServer.ConnectToRoomRequest, global::Zayats.GameServer.ConnectToRoomResponse>(serviceImpl.ConnectToRoom));
      serviceBinder.AddMethod(__Method_StartGame, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zayats.GameServer.StartGameRequest, global::Zayats.GameServer.StartGameResponse>(serviceImpl.StartGame));
    }

  }
}
#endregion
