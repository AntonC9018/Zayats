// <auto-generated>
// This file has been autogenerated by Kari.
// </auto-generated>

#pragma warning disable

namespace Zayats.Core.Generated
{
    using System;
    [Serializable]
    public partial struct ThingArray<T>
    {
        public /*readonly*/ T[] Values;
        private ThingArray(T[] values) => Values = values;
        public static ThingArray<T> Create() => new ThingArray<T>(new T[9]);
        public readonly ref T GetRef(Zayats.Core.ThingKind key)
        {
            return ref Values[(int) key];
        }
        public readonly T Get(Zayats.Core.ThingKind key)
        {
            return Values[(int) key];
        }
        public readonly void Set(Zayats.Core.ThingKind key, T value)
        {
            Values[(int) key] = value;
        }
        public readonly ref T PlayerRef => ref Values[(int) Zayats.Core.ThingKind.Player];
        public T Player
        {
            readonly get => Values[(int) Zayats.Core.ThingKind.Player];
            set => Values[(int) Zayats.Core.ThingKind.Player] = value;
        }
        public readonly ref T EternalMineRef => ref Values[(int) Zayats.Core.ThingKind.EternalMine];
        public T EternalMine
        {
            readonly get => Values[(int) Zayats.Core.ThingKind.EternalMine];
            set => Values[(int) Zayats.Core.ThingKind.EternalMine] = value;
        }
        public readonly ref T RegularMineRef => ref Values[(int) Zayats.Core.ThingKind.RegularMine];
        public T RegularMine
        {
            readonly get => Values[(int) Zayats.Core.ThingKind.RegularMine];
            set => Values[(int) Zayats.Core.ThingKind.RegularMine] = value;
        }
        public readonly ref T CoinRef => ref Values[(int) Zayats.Core.ThingKind.Coin];
        public T Coin
        {
            readonly get => Values[(int) Zayats.Core.ThingKind.Coin];
            set => Values[(int) Zayats.Core.ThingKind.Coin] = value;
        }
        public readonly ref T RespawnPointRef => ref Values[(int) Zayats.Core.ThingKind.RespawnPoint];
        public T RespawnPoint
        {
            readonly get => Values[(int) Zayats.Core.ThingKind.RespawnPoint];
            set => Values[(int) Zayats.Core.ThingKind.RespawnPoint] = value;
        }
        public readonly ref T TotemRef => ref Values[(int) Zayats.Core.ThingKind.Totem];
        public T Totem
        {
            readonly get => Values[(int) Zayats.Core.ThingKind.Totem];
            set => Values[(int) Zayats.Core.ThingKind.Totem] = value;
        }
        public readonly ref T RabbitRef => ref Values[(int) Zayats.Core.ThingKind.Rabbit];
        public T Rabbit
        {
            readonly get => Values[(int) Zayats.Core.ThingKind.Rabbit];
            set => Values[(int) Zayats.Core.ThingKind.Rabbit] = value;
        }
        public readonly ref T TowerRef => ref Values[(int) Zayats.Core.ThingKind.Tower];
        public T Tower
        {
            readonly get => Values[(int) Zayats.Core.ThingKind.Tower];
            set => Values[(int) Zayats.Core.ThingKind.Tower] = value;
        }
        public readonly ref T HorseRef => ref Values[(int) Zayats.Core.ThingKind.Horse];
        public T Horse
        {
            readonly get => Values[(int) Zayats.Core.ThingKind.Horse];
            set => Values[(int) Zayats.Core.ThingKind.Horse] = value;
        }
        public static implicit operator T[](ThingArray<T> a) => a.Values;
        public readonly T[] Array => Values;
        public readonly ref T this[Zayats.Core.ThingKind key] => ref GetRef(key);
        public readonly ref T this[int index] => ref Values[index];
        public readonly int Length => 9;
    }
}

#pragma warning restore
